import { useEffect, useContext } from 'react';

import useFetch from 'hooks/useFetch';
import useLocalStorage from 'hooks/useLocalStorage';
import { CurrentUserContext } from 'contexts/currentUser';

const CurrentUserChecker = ({ children }) => {
    const [{ response }, handlerFetch] = useFetch('/user');
    const [, dispatch] = useContext(CurrentUserContext);
    const [token] = useLocalStorage('user_token')

    useEffect(() => {
        if ( !token ) {
            dispatch({type: 'SET_UNAUTHORIZED'});
            return;
        }
        handlerFetch();
        dispatch({type: 'LOADING'});
    }, [token, handlerFetch, dispatch]);

    useEffect(() => {
        if ( !response ) return;
        dispatch({type: 'SET_AUTHORIZED', payload: response.user});
    }, [response, dispatch])

    return children;
};

export default CurrentUserChecker;