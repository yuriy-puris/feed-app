import React, { useState, useEffect, useContext } from 'react';
import { Link, Redirect } from 'react-router-dom';

import useFetch from 'hooks/useFetch';
import useLocalStorage from 'hooks/useLocalStorage';
import { CurrentUserContext } from 'contexts/currentUser';
import ErrorMessages from 'sharedComponents/errorMessages';

const Authentication = props => {
    // variables for pages
    const isLogin = props.match.path === '/login';
    const pageTitle = isLogin ? 'Sign In' : 'Sign Up';
    const descriptionLink = isLogin ? '/register' : '/login';
    const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'
    const apiUrl = isLogin ? '/users/login' : '/users';

    const [username, setUsername] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [{ response, error }, handlerFetch] = useFetch(apiUrl);
    const [isSuccessfull, setIsSuccessfull] = useState(false);
    const [, setToken] = useLocalStorage('user_token');
    const [, dispatch] = useContext(CurrentUserContext);

    const handlerSubmit = event => {
        event.preventDefault();
        const user = isLogin ? { email, password } : {username, email, password }
        const options = {
            method: 'POST',
            data: {
                user: user
            }
        };
        handlerFetch(options);
    };

    useEffect(() => {
        if ( !response ) return;
        setToken(response.user.token);
        setIsSuccessfull(true);
        dispatch({type: 'SET_AUTHORIZED', payload: response.user});
    }, [response, setToken, dispatch])

    if ( isSuccessfull ) return <Redirect to="/" />;
    
    return (
        <div className="auth-page">
            <div className="container page">
                <div className="row">
                    <div className="col-md-6 offset-md-3 col-xs-12">
                        <h1 className="text-xs-center">{pageTitle}</h1>
                        <p className="text-xs-center">
                            <Link to={descriptionLink}>{descriptionText}</Link>
                        </p>
                        { error && <ErrorMessages errors={error.errors} /> }
                        <form onSubmit={ handlerSubmit }>
                            <fieldset>
                                {!isLogin && (
                                    <fieldset className="form-group">
                                        <input 
                                            type="text"
                                            className="form-control form-control-lg"
                                            placeholder="Username" 
                                            value={ username } 
                                            onChange={ e => setUsername(e.target.value) } />
                                    </fieldset>
                                )}
                                <fieldset className="form-group">
                                    <input 
                                        type="text"
                                        className="form-control form-control-lg"
                                        placeholder="Email" 
                                        value={ email } 
                                        onChange={ e => setEmail(e.target.value) } />
                                </fieldset>
                                <fieldset className="form-group">
                                    <input 
                                        type="password"
                                        className="form-control form-control-lg"
                                        placeholder="Passsord" 
                                        value={ password } 
                                        onChange={ e => setPassword(e.target.value) }/>
                                </fieldset>
                                <button 
                                    className="btn btn-lg btn-primary pull-xs-right" 
                                    type="submit">
                                    {pageTitle}
                                </button>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Authentication;