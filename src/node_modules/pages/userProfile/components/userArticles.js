import React, { useEffect, Fragment } from 'react';
import {stringify} from 'query-string';

import useFetch from 'hooks/useFetch';
import { getPaginator, limit } from 'utils';
import Loading from 'sharedComponents/loading';
import ErrorMessage from 'sharedComponents/errorMessages';
import Feed from 'components/feed';
import Pagination from 'sharedComponents/pagination';


const getApiUrl = ({username, offset, isFavorites}) => {
    const params = isFavorites ? {limit, offset, favorited: username} : {limit, offset, author: username};
    return `/articles?${stringify(params)}`;
};

const UserArticles = ({ username, location, isFavorites, url }) => {
    const {offset, currentPage} = getPaginator(location.search);
    const apiUrl = getApiUrl({username, offset, isFavorites});
    const [{response, isLoading, error}, handlerFetch] = useFetch(apiUrl);

    useEffect(() => {
        handlerFetch();
    }, [handlerFetch, isFavorites]);

    return (
        <div>
            { isLoading && <Loading /> }
            { error && <ErrorMessage /> }
            { !isLoading && response && (
                <Fragment>
                    <Feed articles={response.articles} />
                    <Pagination 
                        total={response.articlesCount} 
                        limit={limit} 
                        url={url} 
                        currentPage={currentPage} />
                </Fragment>
            )}
        </div>
    )
};

export default UserArticles;